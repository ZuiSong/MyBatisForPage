<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的 
	例如namespace="me.gacl.mapping.userMapper"就是me.gacl.mapping(包名)+userMapper(userMapper.xml文件去除后缀) -->
<mapper namespace="cn.mmooo.UserMapper">
<!-- configurationd对标签的顺序有要求，发现配置文件报错首先查看错误报告并且检查顺序是否正确 正确的顺序为：properties?,settings?,typeAliases?,typeHandlers?,objectFactory?,objectWrapperFactory?,reflectorFactory?,plugins?,environments?,databaseIdProvider?,mappers? 
-->

	<!-- 在select标签中编写查询的SQL语句， 设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复 使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型 
		resultType="me.gacl.domain.User"就表示将查询结果封装成一个User类的对象返回 User类就是users表所对应的实体类 -->
	<!-- 根据id查询得到一个user对象 -->
	<resultMap type="cn.mmooo.User" id="userResultMap">
		<id column="id" property="id" javaType="int" />
		<result column="email" property="email" javaType="String" />
		<result column="name" property="name" javaType="String" />
	</resultMap>
	<select id="getUserById" parameterType="int" resultType="cn.mmooo.User">
		SELECT *
		FROM users
		WHERE id=#{id}
	</select>
	<select id="getUsersArray" resultType="cn.mmooo.User">
		SELECT *
		FROM users
	</select>
	<select id="getUsers" resultType="cn.mmooo.User">
		SELECT *
		FROM users
	</select>
	<select id="getUsersList" resultType="cn.mmooo.User">
		SELECT *
		FROM users
	</select>
	<insert id="insertUser">
		INSERT INTO users (name,email)
		VALUES
		(#{name},#{email})
	</insert>
	<update id="updateUser">
		UPDATE users
		SET
		name = #{name},
		email = #{email}
		WHERE
		id
		=#{id}
	</update>
	<delete id="deleteUser">
		DELETE FROM users WHERE id = #{id}
	</delete>

	<select id="getUsersCount" resultType="int">
		SELECT count(*) FROM users
	</select>
</mapper>
